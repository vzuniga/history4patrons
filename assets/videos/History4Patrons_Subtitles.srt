1
0:00:00 --> 0:00:05
 Hello! This is a quick demo of History4Patrons — our patron reading

2
0:00:05 --> 0:00:10
history web app.  Let’s walk through a few different scenarios so you

3
0:00:10 --> 0:00:15
can see how it works.  First, if a user tries to submit the form

4
0:00:15 --> 0:00:20
without entering a value, the app will display an error message

5
0:00:20 --> 0:00:25
prompting them to enter one. This prevents empty values from being

6
0:00:25 --> 0:00:30
sent and avoids unnecessary database errors.  Now, let’s say a user

7
0:00:30 --> 0:00:35
enters something that looks like a valid patron number — it follows

8
0:00:35 --> 0:00:40
the correct format — but the number itself isn’t valid. When they

9
0:00:40 --> 0:00:45
click submit, the app checks against the database and returns an error

10
0:00:45 --> 0:00:50
message. The message will advise the user to double-check the record

11
0:00:50 --> 0:00:55
number or confirm that the patron has opted in to the Reading History

12
0:00:55 --> 0:01:00
feature.  This part is important: the app can only retrieve reading

13
0:01:00 --> 0:01:05
history for patrons who have explicitly opted in. If they haven’t,

14
0:01:05 --> 0:01:10
their history won’t be available.  Next, let’s enter a valid patron

15
0:01:10 --> 0:01:15
record number.  We’ll paste it in, and then substitute the last digit

16
0:01:15 --> 0:01:20
with the letter “A” to generate the check digit. As you can see, the

17
0:01:20 --> 0:01:25
format uses a 'p' followed by the patron number and then ends with

18
0:01:25 --> 0:01:30
'A'. This is a simplified way to simulate the proper check digit.

19
0:01:30 --> 0:01:35
Once we have that in place, we click submit.  The app connects to the

20
0:01:35 --> 0:01:40
database, looks up the record number, and retrieves the patron’s

21
0:01:40 --> 0:01:45
reading history.  If the query is successful, the app prompts us to

22
0:01:45 --> 0:01:50
save the results. You’ll see a suggested filename — usually including

23
0:01:50 --> 0:01:55
the patron record number — to help identify the file. But you can

24
0:01:55 --> 0:02:00
rename it to anything you'd like.  Click “Save,” and now the file is

25
0:02:00 --> 0:02:05
stored locally as a CSV.  Let’s open it in Excel.  Go to the Data tab,

26
0:02:05 --> 0:02:10
choose Import from Text/CSV, and select the file we just saved.  Click

27
0:02:10 --> 0:02:15
Import, and now you’ll see a clean, easy-to-read table with: - Title -

28
0:02:15 --> 0:02:20
Author - Item number (optional; included mainly for staff use) - And

29
0:02:20 --> 0:02:25
the checkout date — which many of our patrons specifically asked for.

30
0:02:25 --> 0:02:30
We intentionally kept this file lean. Most patrons don’t need extra

31
0:02:30 --> 0:02:35
details like call numbers or item types. But if needed, we can always

32
0:02:35 --> 0:02:40
expand it to include additional fields. For now, this version gives

33
0:02:40 --> 0:02:45
patrons exactly what they need — a clean, simple list of their past

34
0:02:45 --> 0:02:50
checkouts.  Click Load, and just like that, the data is ready.  From

35
0:02:50 --> 0:02:55
here, you can email the CSV file to the patron or use it however you

36
0:02:55 --> 0:03:00
like.  That wraps up our demo of History4Patrons.  We hope you find it

37
0:03:00 --> 0:03:05
useful!  If you have any questions, feel free to reach out — you can

38
0:03:05 --> 0:03:10
contact me at vzuniga@poudrelibraries.org.  Thanks again! My name is

39
0:03:10 --> 0:03:15
Victor Zuniga, and I'm the Systems Administrator at Poudre Libraries

40
0:03:15 --> 0:03:20
in Fort Collins, Colorado.
